class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<pair<double,pair<int,int>>> pq;
        for(auto v: points) {
            int x=v[0],y=v[1];
            pq.push({sqrt(x*x + y*y),{x,y}});
            if(pq.size()>k){
                pq.pop();
            }
        }
        
        vector<vector<int>> ans;
        while(!pq.empty()) {
            ans.push_back({pq.top().second.first, pq.top().second.second});
            pq.pop();
        }
        
        return ans;
    }
};